{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Maybe.ts","../../src/Proof.ts","../../src/NoAssumptionsProofView.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export function nothing() {\n    return { name: 'Nothing' };\n}\nexport function just(value) {\n    return { name: 'Just', value };\n}\n","import { nothing, just } from './Maybe';\nexport function findNoAssumptionsProof(vertices, edges) {\n    const { hasEdge, neighbors } = make(vertices, edges);\n    for (let [a, b] of edges) {\n        let colors = new Map([[a, 'red'], [b, 'green']]);\n        let intermediateSteps = [];\n        while (true) {\n            const maybeIntermediateStep = findIntermediateStep(vertices, hasEdge, colors, neighbors);\n            if (maybeIntermediateStep.name === 'Nothing') {\n                break;\n            }\n            intermediateSteps.push(maybeIntermediateStep.value);\n            colors.set(maybeIntermediateStep.value.vertex, maybeIntermediateStep.value.newColor);\n            const maybeContradictoryEdge = find(edges, ([u, v]) => colors.has(u) && colors.has(v) &&\n                (colors.get(u) === colors.get(v)));\n            if (maybeContradictoryEdge.name === 'Just') {\n                return just({\n                    initialRedGreenEdge: [a, b],\n                    intermediateSteps,\n                    contradictoryEdge: maybeContradictoryEdge.value,\n                    finalColors: new Map(colors)\n                });\n            }\n        }\n    }\n    return nothing();\n}\nfunction findIntermediateStep(vertices, hasEdge, colors, neighbors) {\n    const maybeTwoNeighborsTwoColors = findTwoNeighborsTwoColors(vertices, colors, neighbors);\n    if (maybeTwoNeighborsTwoColors.name === 'Just') {\n        return maybeTwoNeighborsTwoColors;\n    }\n    return findOddCycleTangentsSameColors(vertices, hasEdge, colors, neighbors);\n}\nfunction findTwoNeighborsTwoColors(vertices, colors, neighbors) {\n    for (let vertex of vertices.filter(vertex => !colors.has(vertex))) {\n        let redNeighbor = nothing();\n        let greenNeighbor = nothing();\n        let blueNeighbor = nothing();\n        for (let neighbor of neighbors.get(vertex)) {\n            if (colors.has(neighbor)) {\n                switch (colors.get(neighbor)) {\n                    case 'red':\n                        redNeighbor = just(neighbor);\n                        break;\n                    case 'green':\n                        greenNeighbor = just(neighbor);\n                        break;\n                    case 'blue':\n                        blueNeighbor = just(neighbor);\n                        break;\n                }\n                if (redNeighbor.name === 'Just' && greenNeighbor.name === 'Just') {\n                    return just({\n                        name: 'TwoNeighborsTwoColors',\n                        newColor: 'blue',\n                        vertex: vertex,\n                        firstNeighbor: redNeighbor.value,\n                        secondNeighbor: greenNeighbor.value,\n                        colors: new Map(colors)\n                    });\n                }\n                if (redNeighbor.name === 'Just' && blueNeighbor.name === 'Just') {\n                    return just({\n                        name: 'TwoNeighborsTwoColors',\n                        newColor: 'green',\n                        vertex: vertex,\n                        firstNeighbor: redNeighbor.value,\n                        secondNeighbor: blueNeighbor.value,\n                        colors: new Map(colors)\n                    });\n                }\n                if (greenNeighbor.name === 'Just' && blueNeighbor.name === 'Just') {\n                    return just({\n                        name: 'TwoNeighborsTwoColors',\n                        newColor: 'red',\n                        vertex: vertex,\n                        firstNeighbor: blueNeighbor.value,\n                        secondNeighbor: greenNeighbor.value,\n                        colors: new Map(colors)\n                    });\n                }\n            }\n        }\n    }\n    return nothing();\n}\nfunction findCycles(cycleLength, vertices, hasEdge) {\n    return findPaths(cycleLength, vertices, hasEdge)\n        .filter(path => hasEdge.get(path[0]).has(path[cycleLength - 1]));\n}\nfunction findPaths(pathLength, vertices, hasEdge) {\n    return flatMap(vertices, vertex => helper([], vertex));\n    function helper(pathSoFar, lastInPath) {\n        const fullPath = [...pathSoFar, lastInPath];\n        if (fullPath.length === pathLength) {\n            return [fullPath];\n        }\n        const candidateVertices = vertices.filter(vertex => !pathSoFar.includes(vertex) && hasEdge.get(lastInPath).has(vertex));\n        if (candidateVertices.length === 0) {\n            return [];\n        }\n        return flatMap(candidateVertices, vertex => helper(fullPath, vertex));\n    }\n}\nfunction findOddCycleTangentsSameColors(vertices, hasEdge, colors, neighbors) {\n    for (let i = 3; i < vertices.length; i += 2) {\n        for (let oddCycle of findCycles(i, vertices, hasEdge)) {\n            const redResult = analyzeOddCycle(oddCycle, neighbors, 'red', colors);\n            if (redResult.name === 'Just') {\n                return redResult;\n            }\n            const greenResult = analyzeOddCycle(oddCycle, neighbors, 'green', colors);\n            if (greenResult.name === 'Just') {\n                return greenResult;\n            }\n            const blueResult = analyzeOddCycle(oddCycle, neighbors, 'blue', colors);\n            if (blueResult.name === 'Just') {\n                return blueResult;\n            }\n        }\n    }\n    return nothing();\n}\nfunction analyzeOddCycle(oddCycle, neighbors, color, colors) {\n    let exception = nothing();\n    let oddCycleTangents = [];\n    for (let vertex of oddCycle) {\n        const maybeNeighbor = find(neighbors.get(vertex), neighbor => colors.get(neighbor) === color);\n        if (maybeNeighbor.name === 'Just') {\n            oddCycleTangents.push({ memberOfCycle: vertex, neighbor: maybeNeighbor.value });\n        }\n        else {\n            if (exception.name === 'Just' || colors.has(vertex)) {\n                return nothing();\n            }\n            else {\n                exception = just(vertex);\n            }\n        }\n    }\n    switch (exception.name) {\n        case 'Just':\n            return just({\n                name: 'OddCycleTangentsSameColor',\n                newColor: color,\n                vertex: exception.value,\n                oddCycleTangents,\n                colors: new Map(colors)\n            });\n        case 'Nothing':\n            const [first, ...rest] = oddCycleTangents;\n            return just({\n                name: 'OddCycleTangentsSameColor',\n                newColor: color,\n                vertex: first.memberOfCycle,\n                oddCycleTangents: rest,\n                colors: new Map(colors)\n            });\n    }\n}\nfunction find(xs, predicate) {\n    for (let x of xs) {\n        if (predicate(x)) {\n            return just(x);\n        }\n    }\n    return nothing();\n}\nfunction flatMap(xs, f) {\n    let result = [];\n    for (let x of xs) {\n        result.push(...f(x));\n    }\n    return result;\n}\nexport function make(vertices, edges) {\n    let hasEdge = new Map();\n    let neighbors = new Map();\n    for (let vertex of vertices) {\n        hasEdge.set(vertex, new Set());\n        neighbors.set(vertex, []);\n    }\n    for (let [a, b] of edges) {\n        hasEdge.get(a).add(b);\n        hasEdge.get(b).add(a);\n        neighbors.get(a).push(b);\n        neighbors.get(b).push(a);\n    }\n    return { hasEdge, neighbors };\n}\n","<script lang=\"ts\">\n    import type { NoAssumptionsProof, IntermediateStep } from './Proof'\n\n    export let noAssumptionsProof: NoAssumptionsProof\n    export let vertices: number[]\n    export let edges: [number, number][]\n    export let xs: number[]\n    export let ys: number[]\n\n    let state: 'First' | 'Middle' | 'Last' = 'First'\n\n    let index = -1\n\n    function isContradictoryEdge(u: number, v: number, noAssumptionsProof: NoAssumptionsProof): boolean {\n\t\tconst [a, b] = noAssumptionsProof.contradictoryEdge\n\t\treturn (\n\t\t\t(u === a && v === b) ||\n\t\t\t(u === b && v === a)\n\t\t)\n    }\n\n    function equalEdges([u, v]: [number, number], [a, b]: [number, number]): boolean {\n        return (u === a && v === b) || (u === b && v === a)\n    }\n\n    function intermediateStrokeColor(u: number, v: number, intermediateStep: IntermediateStep): string {\n        if (intermediateStep.name === 'TwoNeighborsTwoColors') {\n            if (equalEdges([u, v], [intermediateStep.firstNeighbor, intermediateStep.vertex])) {\n                return intermediateStep.colors.get(intermediateStep.firstNeighbor)\n            } else if (equalEdges([u, v], [intermediateStep.secondNeighbor, intermediateStep.vertex])) {\n                return intermediateStep.colors.get(intermediateStep.secondNeighbor)\n            } else {\n                return 'black'\n            }\n        }\n    }\n</script>\n\n{#if state === 'First'}\n    <svg>\n        {#each edges as [a, b]}\n            <line stroke=\"black\" x1={xs[a]} x2={xs[b]} y1={ys[a]} y2={ys[b]}></line>\n        {/each}\n\n        {#each vertices as vertex}\n            <g class=\"vertex\">\n                <circle fill={\n                    vertex === noAssumptionsProof.initialRedGreenEdge[0] ? 'red' :\n                    vertex === noAssumptionsProof.initialRedGreenEdge[1] ? 'green' :\n                    'white'\n                } stroke=\"black\" r=\"20\" cx={xs[vertex]} cy={ys[vertex]} />\n                <text stroke=\"black\" x={xs[vertex]} y={ys[vertex]} text-anchor=\"middle\" font-size=\"smaller\">{vertex}</text>\n            </g>\n        {/each}\n    </svg>\n\n\n    <button disabled>Previous Step</button>\n\n    <button on:click={_ => {\n        state = 'Middle'\n        index = 0\n    }}>Next Step</button>\n{/if}\n\n{#if state === 'Middle'}\n    <svg>\n        {#each edges as [a, b]}\n            <line stroke={intermediateStrokeColor(a, b, noAssumptionsProof.intermediateSteps[index])} x1={xs[a]} x2={xs[b]} y1={ys[a]} y2={ys[b]}></line>\n        {/each}\n\n        {#each vertices as vertex}\n            {#if vertex === noAssumptionsProof.intermediateSteps[index].vertex}\n                <g class=\"vertex\">\n                    <circle fill={noAssumptionsProof.intermediateSteps[index].newColor} stroke=\"black\" r=\"20\" cx={xs[vertex]} cy={ys[vertex]} />\n                    <text stroke=\"black\" x={xs[vertex]} y={ys[vertex]} text-anchor=\"middle\" font-size=\"smaller\">{vertex}</text>\n                </g>\n            {:else}\n                <g class=\"vertex\">\n                    <circle fill={noAssumptionsProof.intermediateSteps[index].colors.has(vertex) ? noAssumptionsProof.intermediateSteps[index].colors.get(vertex) : 'white'} stroke=\"black\" r=\"20\" cx={xs[vertex]} cy={ys[vertex]} />\n                    <text stroke=\"black\" x={xs[vertex]} y={ys[vertex]} text-anchor=\"middle\" font-size=\"smaller\">{vertex}</text>\n                </g>\n            {/if}\n        {/each}\n    </svg>\n\n    <button on:click={_ => {\n        if (index === 0) {\n            index = -1\n            state = 'First'\n        } else {\n            index = index - 1\n        }\n    }}>Previous Step</button>\n\n    <button on:click={_ => {\n        if (index === noAssumptionsProof.intermediateSteps.length - 1) {\n            index = -1\n            state = 'Last'\n        } else {\n            index = index + 1\n        }\n    }}>Next Step</button>\n{/if}\n\n{#if state === 'Last'}\n    <svg>\n        {#each edges as [a, b]}\n            <line\n                stroke={isContradictoryEdge(a, b, noAssumptionsProof) ? 'red' : 'black'}\n                stroke-width={isContradictoryEdge(a, b, noAssumptionsProof) ? 3 : 1}\n                x1={xs[a]} x2={xs[b]} y1={ys[a]} y2={ys[b]}\n            />\n        {/each}\n\n        {#each vertices as vertex}\n            <g class=\"vertex\">\n                <circle fill={noAssumptionsProof.finalColors.has(vertex) ? noAssumptionsProof.finalColors.get(vertex) : 'white' } stroke=\"black\" r=\"20\" cx={xs[vertex]} cy={ys[vertex]} />\n                <text stroke=\"black\" x={xs[vertex]} y={ys[vertex]} text-anchor=\"middle\" font-size=\"smaller\">{vertex}</text>\n            </g>\n        {/each}\n    </svg>\n\n    <button on:click={_ => {\n        index = noAssumptionsProof.intermediateSteps.length - 1\n        state = 'Middle'\n    }}>Previous Step</button>\n\n    <button disabled>Next Step</button>\n{/if}\n\n\n<style>\n    svg {\n        display: block;\n        height: 700px;\n        width: 700px;\n    }\n</style>","<script lang=\"ts\">\nimport type { get } from 'svelte/store';\n\timport type { Maybe } from './Maybe'\n\timport { nothing } from './Maybe';\n\timport type { NoAssumptionsProof } from './Proof'\n\timport { findNoAssumptionsProof } from './Proof'\n\n\timport NoAssumptionsProofView from './NoAssumptionsProofView.svelte'\n\n\ttype State = {\n\t\tname: 'Neutral'\n\t} | {\n\t\tname: 'Hover'\n\t\tvertex: number\n\t} | {\n\t\tname: 'Dragging'\n\t\tvertex: number\n\t\tcursorX: number\n\t\tcursorY: number\n\t} | {\n\t\tname: 'MakingEdge'\n\t\tsource: number\n\t\tcursorX: number\n\t\tcursorY: number\n\t} | {\n\t\tname: 'SnappedEdge'\n\t\tsource: number\n\t\tdestination: number\n\t}\n\n\tlet state: State = {name: 'Neutral'}\n\n\tlet vertices: number[] = []\n\tlet edges: [number, number][] = []\n\tlet xs: number[] = []\n\tlet ys: number[] = []\n\n\tlet unusedVertices: number[] = []\n\n\tlet noAssumptionsProof: Maybe<NoAssumptionsProof> = nothing()\n\n\tfunction cursorPosition(event: MouseEvent): {cursorX: number, cursorY: number} {\n\t\tconst svg = event.target as SVGGraphicsElement\n\t\tconst CTM = svg.getScreenCTM()\n\n\t\tconst cursorX = (event.clientX - CTM.e) / CTM.a\n\t\tconst cursorY = (event.clientY - CTM.f) / CTM.d\n\n\t\treturn {cursorX, cursorY}\n\t}\n\n\tfunction edgeExists(u: number, v: number) {\n\t\treturn edges.some(([a, b]) => (a === u && b === v) || (a === v && b === u))\n\t}\n</script>\n\n<main>\n\t<svg\n\t\ton:mousemove={event => {\n\t\t\tif (state.name === 'Dragging') {\n\t\t\t\tconst { cursorX, cursorY } = cursorPosition(event)\n\t\t\t\txs[state.vertex] = cursorX\n\t\t\t\tys[state.vertex] = cursorY\n\t\t\t\tstate = { name: 'Dragging', vertex: state.vertex, ...cursorPosition(event)\t}\t\t\n\t\t\t} else if (state.name === 'MakingEdge') {\n\t\t\t\tstate = { name: 'MakingEdge', source: state.source, ...cursorPosition(event) }\n\t\t\t}\n\t\t}}\n\t\ton:mouseup={event => {\n\t\t\tif (state.name === 'Neutral') {\n\t\t\t\tconst vertex = unusedVertices.length === 0 ? vertices.length : unusedVertices.pop()\n\t\t\t\tconst { cursorX, cursorY } = cursorPosition(event)\n\t\t\t\tvertices = [...vertices, vertex]\n\t\t\t\txs[vertex] = cursorX\n\t\t\t\tys[vertex] = cursorY\n\t\t\t} else if (state.name === 'MakingEdge') {\n\t\t\t\tstate = { name: 'Neutral' }\n\t\t\t} else if (state.name === 'SnappedEdge') {\n\t\t\t\tedges = [...edges, [state.source, state.destination]]\n\t\t\t\tstate = { name: 'Hover', vertex: state.destination }\n\t\t\t}\n\t\t}}\n\t\ton:auxclick|preventDefault\n\t\ton:contextmenu|preventDefault\n\t>\n\t\t{#each edges as [a, b]}\n\t\t\t<line class=\"edge\" stroke=\"black\"\n\t\t\t\tx1={xs[a]} y1={ys[a]}\n\t\t\t\tx2={xs[b]} y2={ys[b]}\n\t\t\t/>\n\t\t{/each}\n\n\t\t{#each vertices as vertex}\n\t\t\t<circle\tclass=\"snappable-area\" cx={xs[vertex]} cy={ys[vertex]} r=\"40\" fill=\"none\"\n\t\t\t\ton:mouseover={_ => {\n\t\t\t\t\tif (state.name === 'MakingEdge' && vertex !== state.source && !edgeExists(vertex, state.source)) {\n\t\t\t\t\t\tstate = { name: 'SnappedEdge', source: state.source, destination: vertex }\n\t\t\t\t\t}\n\t\t\t\t}}\n\n\t\t\t\ton:mouseleave={event => {\n\t\t\t\t\tif (state.name === 'SnappedEdge') {\n\t\t\t\t\t\tstate = { name: 'MakingEdge', source: state.source, ...cursorPosition(event) }\n\t\t\t\t\t}\n\t\t\t\t}}\n\n\t\t\t\ton:click={_ => {\n\t\t\t\t\tif (state.name === 'SnappedEdge') {\n\t\t\t\t\t\tedges = [...edges, [state.source, state.destination]]\n\t\t\t\t\t\tstate = { name: 'Neutral' }\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<g\n\t\t\t\ton:mouseover={_ => {\n\t\t\t\t\tif (state.name === 'Neutral') {\n\t\t\t\t\t\tstate = { name: 'Hover', vertex\t}\n\t\t\t\t\t} else if (state.name === 'MakingEdge' && vertex !== state.source && !edgeExists(vertex, state.source)) {\n\t\t\t\t\t\tstate = { name: 'SnappedEdge', source: state.source, destination: vertex }\n\t\t\t\t\t}\n\t\t\t\t}}\n\n\t\t\t\ton:mouseleave={event => {\n\t\t\t\t\tif (state.name === 'Hover') {\n\t\t\t\t\t\tstate = { name: 'Neutral' }\n\t\t\t\t\t} else if (state.name === 'SnappedEdge') {\n\t\t\t\t\t\tstate = { name: 'MakingEdge', source: state.source, ...cursorPosition(event) }\n\t\t\t\t\t}\n\t\t\t\t}}\n\n\t\t\t\ton:mousedown={event => {\n\t\t\t\t\tif (state.name === 'Hover') {\n\t\t\t\t\t\tconst { cursorX, cursorY } = cursorPosition(event)\n\t\t\t\t\t\tstate = { name: 'Dragging', vertex: state.vertex, cursorX, cursorY }\n\t\t\t\t\t}\n\t\t\t\t}}\n\n\t\t\t\ton:mouseup={_ => {\n\t\t\t\t\tif (state.name === 'Dragging') {\n\t\t\t\t\t\tstate = { name: 'Hover', vertex: state.vertex }\n\t\t\t\t\t} else if (state.name === 'MakingEdge') {\n\t\t\t\t\t\tstate = { name: 'Hover', vertex: state.source }\n\t\t\t\t\t} else if (state.name === 'SnappedEdge') {\n\t\t\t\t\t\tedges = [...edges, [state.source, state.destination]]\n\t\t\t\t\t\tstate = { name: 'Hover', vertex: state.destination }\n\t\t\t\t\t}\n\t\t\t\t}}\n\n\t\t\t\ton:mousemove={event => {\n\t\t\t\t\tif (state.name === 'Dragging') {\n\t\t\t\t\t\tconst { cursorX, cursorY } = cursorPosition(event)\n\t\t\t\t\t\txs[vertex] = cursorX\n\t\t\t\t\t\tys[vertex] = cursorY\n\t\t\t\t\t\tstate = { name: 'Dragging', vertex: state.vertex, cursorX, cursorY }\t\t\n\t\t\t\t\t}\n\t\t\t\t}}\n\n\t\t\t\ton:dblclick={event => {\n\t\t\t\t\tif (state.name === 'Hover') {\n\t\t\t\t\t\tstate = {\n\t\t\t\t\t\t\tname: 'MakingEdge',\n\t\t\t\t\t\t\tsource: vertex,\n\t\t\t\t\t\t\tcursorX: xs[vertex],\n\t\t\t\t\t\t\tcursorY: ys[vertex]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\n\t\t\t\ton:auxclick|preventDefault={event => {\n\t\t\t\t\tif (state.name === 'Hover') {\n\t\t\t\t\t\tvertices = vertices.filter(v => v !== vertex)\n\t\t\t\t\t\tedges = edges.filter(([a, b]) => a !== vertex && b !== vertex)\n\n\t\t\t\t\t\tunusedVertices.push(vertex)\n\n\t\t\t\t\t\tstate = { name: 'Neutral' }\n\t\t\t\t\t}\n\t\t\t\t}}\n\n\t\t\t\ton:contextmenu|preventDefault\n\t\t\t>\n\t\t\t\t<circle\n\t\t\t\t\tclass={\n\t\t\t\t\t\t(state.name === 'Hover' || state.name === 'Dragging') && state.vertex === vertex\n\t\t\t\t\t\t\t? (state.name === 'Hover' ? 'hovering' : 'dragging')\n\t\t\t\t\t\t\t: 'neutral'\n\t\t\t\t\t}\n\t\t\t\t\tcx={xs[vertex]}\tcy={ys[vertex]}\tr=\"20\" fill=\"white\"\tstroke=\"black\"\n\t\t\t\t/>\n\n\t\t\t\t<text\n\t\t\t\t\tclass={\n\t\t\t\t\t\t(state.name === 'Hover' || state.name === 'Dragging') && state.vertex === vertex\n\t\t\t\t\t\t\t? (state.name === 'Hover' ? 'hovering' : 'dragging')\n\t\t\t\t\t\t\t: 'neutral'\n\t\t\t\t\t}\n\t\t\t\t\ttext-anchor=\"middle\" font-size=\"smaller\" x={xs[vertex]}\ty={ys[vertex]}\n\t\t\t\t>{vertex}</text>\n\t\t\t</g>\n\t\t{/each}\n\n\t\t{#if state.name === 'MakingEdge'}\n\t\t\t<line\n\t\t\t\tclass=\"preview-line\"\n\t\t\t\tstroke=\"black\"\n\n\t\t\t\tx1={xs[state.source]}\n\t\t\t\ty1={ys[state.source]}\n\n\t\t\t\tx2={state.cursorX}\n\t\t\t\ty2={state.cursorY}\n\t\t\t/>\n\t\t{/if}\n\n\t\t{#if state.name === 'SnappedEdge'}\n\t\t\t<line\n\t\t\t\tclass=\"preview-line\"\n\t\t\t\tstroke=\"black\"\n\n\t\t\t\tx1={xs[state.source]}\n\t\t\t\ty1={ys[state.source]}\n\n\n\t\t\t\tx2={xs[state.destination]}\n\t\t\t\ty2={ys[state.destination]}\n\t\t\t/>\n\t\t{/if}\n\t</svg>\n\n\t<button on:click={_ => { noAssumptionsProof = findNoAssumptionsProof(vertices, edges) }}>Analyze Colorability</button>\n\n\t{#if noAssumptionsProof.name === 'Just'}\n\t\t<NoAssumptionsProofView {vertices} {edges} noAssumptionsProof={noAssumptionsProof.value} {xs} {ys} />\n\t{/if}\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n\n\tsvg {\n\t\tdisplay: block;\n\t\tborder: 1px solid black;\n\t\theight: 700px;\n\t\twidth: 700px;\n\t}\n\n\ttext {\n\t\tpointer-events: none;\n\t}\n\n\t.hovering {\n    \tcursor: grab;\n\t}\n\n\t.dragging {\n\t\tcursor: grabbing;\n\t}\n\n\t.snappable-area {\n\t\tpointer-events: all;\n\t}\n\n\t.preview-line {\n\t\tpointer-events: none;\n\t}\n\n\t.edge {\n\t\tcursor: pointer;\n\t}\n</style>","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {\n        name: 'world'\n    }\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","bubble","callbacks","$$","type","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","just","findNoAssumptionsProof","vertices","edges","hasEdge","neighbors","vertex","set","get","make","colors","intermediateSteps","maybeIntermediateStep","findIntermediateStep","newColor","maybeContradictoryEdge","find","u","v","initialRedGreenEdge","contradictoryEdge","finalColors","maybeTwoNeighborsTwoColors","redNeighbor","greenNeighbor","blueNeighbor","neighbor","firstNeighbor","secondNeighbor","findTwoNeighborsTwoColors","oddCycle","findCycles","redResult","analyzeOddCycle","greenResult","blueResult","findOddCycleTangentsSameColors","cycleLength","pathLength","flatMap","helper","pathSoFar","lastInPath","fullPath","candidateVertices","includes","findPaths","path","color","exception","oddCycleTangents","maybeNeighbor","memberOfCycle","first","xs","predicate","x","f","result","intermediateStrokeColor","isContradictoryEdge","noAssumptionsProof","equalEdges","intermediateStep","ys","state","_","source","cursorX","cursorY","destination","r","cursorPosition","CTM","getScreenCTM","clientX","e","clientY","unusedVertices","edgeExists","some","body"],"mappings":"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"}